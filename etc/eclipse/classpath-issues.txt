
Consolidated plugin/ project classpaths. Notes:

1) All the projects that are Eclipse plugins:

	- MUST NOT have Java project dependencies,

	- MUST declare dependencies via the plugin descriptor,

	- MUST NOT re-export dependencies via "Order and Export" tab,
	  use the plugin descriptor instead.

	- SHOULD NOT depend on any extra plugins other than:
		- org.carrot2.core
		- org.carrot2.util.common
	  These plugins re-export many standard libraries and there
	  is usually no need to bother with importing anything else.
	  
	- SHOULD declare plugin version number as:
	  0.0.0.qualifier

2) All the projects that are regular Java projects (Webapp, DCS, examples):

    - MUST NOT declare dependencies on multiple Carrot2 plugins. Instead, 
	  add a dependency on:
		- carrot2-component-suites
	  This project depends on nearly all algorithms and sources, so no extra
	  classpath should be required.
	
3) All the library plugin wrappers:

    - MUST declare their corresponding version number consistent with their
	  library release number.

	  Exception:
	  Apache commons and FEST libraries are bundled together in larger packages
	  for the use in the Carrot2 project. Their version number follows Carrot2 
	  platform versioning.


Buddy policy explanation:

Buddy classpath policy is needed when there exist dependencies between plugins that 
are not mirrored in the explicit dependency structure of the OSGi manifest files. 
This is the case, for example, when one plugin should dynamically (via reflection) 
create instances of classes from arbitrary plugins.

More: http://www.eclipsezone.com/articles/eclipse-vms/

Currently, dependency on the core plugin automatically implies that the classes 
and resources from the depending plugin are scanned when reflection is used.
