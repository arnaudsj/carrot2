<?xml version="1.0" encoding="UTF-8"?>
<project name="carrot2.maven" default="default" xmlns:artifact="urn:maven-artifact-ant">

    <target name="check.properties">
        <dirname property="carrot2.maven.basedir" file="${ant.file.carrot2.maven}" />

        <fail unless="carrot2.master.basedir">Required property missing: carrot2.master.basedir</fail>
        <fail unless="maven.repository.dir">Required property missing: maven.repository.dir</fail>
        <fail unless="carrot2.version">Required property missing: carrot2.version</fail>
        
        <mkdir dir="${maven.repository.dir}" />
        <fileurl property="maven.repository.url" file="${maven.repository.dir}" />        
    </target>

    <target name="check.maven">
        <property environment="env" />
        <condition property="mvn.available">
            <or>
                <available file="mvn.bat" filepath="${env.Path}" />
                <available file="mvn"     filepath="${env.PATH}" />
            </or>
        </condition>

        <fail unless="mvn.available">mvn (Maven2) not available in path.</fail>
    </target>

    <target name="filter.poms" depends="check.properties">
        <delete dir="${carrot2.maven.basedir}/tmp" />

        <property name="poms.dir" location="${carrot2.maven.basedir}/tmp/poms" />
        <mkdir dir="${poms.dir}" />
        <copy todir="${poms.dir}" encoding="UTF-8" overwrite="true">
            <fileset dir="${carrot2.maven.basedir}/poms">
                <include name="*pom.xml" />
            </fileset>

            <filterset begintoken="@" endtoken="@">
                <filter token="carrot2.version" value="${carrot2.version}" />
            </filterset>
        </copy>
    </target>

    <target name="deploy" depends="check.maven, filter.poms">
        <path id="maven-ant-tasks.classpath">
            <fileset dir="${carrot2.maven.basedir}">
                <include name="maven-ant-tasks-*.jar" />
            </fileset>
        </path>

        <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
            uri="urn:maven-artifact-ant"
            classpathref="maven-ant-tasks.classpath" />

        <echo>Maven2 deployment location: ${maven.repository.url}</echo>
        
        <artifact:deploy file="${jar.dir}/carrot2-core.jar">
            <artifact:pom file="${poms.dir}/carrot2-core.pom.xml" />
            <artifact:remoteRepository url="${maven.repository.url}" />

            <attach classifier="sources" file="${jar.dir}/carrot2-core-sources.jar" type="jar" />
            <attach classifier="javadoc" file="${jar.dir}/carrot2-core-javadoc.jar" type="jar" />
        </artifact:deploy>
        
        <artifact:deploy file="${jar.dir}/carrot2-mini.jar">
            <artifact:pom file="${poms.dir}/carrot2-mini.pom.xml" />
            <artifact:remoteRepository url="${maven.repository.url}" />
        </artifact:deploy>

        <!-- Deploy custom libraries or those that are not present in the official Maven repositories -->

        <artifact:deploy file="${carrot2.master.basedir}/lib/morfologik/morfologik-stemming-1.2.2.jar">
            <artifact:pom file="${poms.dir}/morfologik.pom.xml" />
            <artifact:remoteRepository url="${maven.repository.url}" />
        </artifact:deploy>

        <artifact:deploy file="${carrot2.master.basedir}/lib/com.sun.rome/rome-1.0RC1.jar">
            <artifact:pom file="${poms.dir}/rome.pom.xml" />
            <artifact:remoteRepository url="${maven.repository.url}" />
        </artifact:deploy>

        <artifact:deploy file="${carrot2.master.basedir}/lib/com.sun.rome/rome-fetcher-0.7.jar">
            <artifact:pom file="${poms.dir}/rome-fetcher.pom.xml" />
            <artifact:remoteRepository url="${maven.repository.url}" />
        </artifact:deploy>

        <artifact:deploy file="${carrot2.master.basedir}/core/carrot2-util-matrix/lib/nni.jar">
            <artifact:pom file="${poms.dir}/nni.pom.xml" />
            <artifact:remoteRepository url="${maven.repository.url}" />
        </artifact:deploy>

        <copy todir="${carrot2.maven.basedir}/tmp/archetype">
            <fileset dir="${carrot2.maven.basedir}/archetype" />
        </copy>
        <copy todir="${carrot2.maven.basedir}/tmp/archetype/src/main/java">
            <fileset dir="${carrot2.master.basedir}/applications/carrot2-examples/src" />            
        </copy>
        <copy tofile="${carrot2.maven.basedir}/tmp/archetype/pom.xml" file="${poms.dir}/carrot2-archetype.pom.xml" />

        <echo>Building archetype...</echo>
        <exec executable="mvn" dir="${carrot2.maven.basedir}/tmp/archetype" failonerror="true" vmlauncher="false">
            <arg value="archetype:create-from-project" />
            <arg value="-q" />

            <!-- Do not filter Java sources. The spelling pretty much reflects the quality of the entire archetype plugin. -->
            <arg value="-Darchetype.languages=fake" />
            <arg value="-Darchetype.filteredExtentions=fake" />
        </exec>

        <echo>Deploying archetype...</echo>
        <!--
            We install the archetype locally because archetype:jar does not work at the moment.
        -->
        <exec executable="mvn" dir="${carrot2.maven.basedir}/tmp/archetype/target/generated-sources/archetype" failonerror="true" vmlauncher="false">
            <arg value="install" />
            <arg value="-q" />
        </exec>

        <artifact:deploy file="${carrot2.maven.basedir}/tmp/archetype/target/generated-sources/archetype/target/carrot2-example-archetype-${carrot2.version}.jar">
            <artifact:pom file="${poms.dir}/carrot2-archetype-deployed.pom.xml" />
            <artifact:remoteRepository url="${maven.repository.url}" />
        </artifact:deploy>
    </target>

    <target name="default">
        <echo>This build file is part of the master build file. Do not run separately.</echo>
    </target>

    <!--
    We could use maven directly from command line, if ant tasks are too heavy. 
    
    <macrodef name="mvn-deploy-jar">
        <attribute name="url" default="${maven.repository.url}" />
        <attribute name="repositoryId" default="carrot2" />
        <attribute name="packaging" default="jar" />
        <attribute name="groupId" default="org.carrot2" />
        <attribute name="file" />
        <attribute name="artifactId" />
        <attribute name="version" />

        <sequential>
            <echo>m2-deploy: @{file}</echo>
            <exec executable="mvn" failonerror="true" vmlauncher="false" output="maven.out" error="maven.err">
                <arg value="deploy:deploy-file" />
                <arg value="-Durl=@{url}" />
                <arg value="-DrepositoryId=@{repositoryId}" />
                <arg value="-DrepositoryLayout=default" />
                <arg value="-Dpackaging=@{packaging}" />
    
                <arg value="-Dfile=@{file}" />
                <arg value="-DgroupId=@{groupId}" />
                <arg value="-DartifactId=@{artifactId}" />
                <arg value="-Dversion=@{version}" />
            </exec>
        </sequential>
    </macrodef>
    -->    
</project>
