<project name="Build specific targets and properties" default="noDefault">

	<condition property="allElementsTestFile"
	           value="${builder}/allElements.xml"
	           else="${allElementsFile}">
		<equals arg1="${build.type}" arg2="test" />
	</condition>
	<import file="${allElementsTestFile}" />

	<property name="java.source.common.attributes"
	          location="${buildDirectory}/plugins/carrot2-core/src/org/carrot2/core/attribute/AttributeNames.java" />
	<path id="attribute.classpath">
		<pathelement path="${buildDirectory}/plugins/carrot2-core/@dot" />
		<pathelement path="${buildDirectory}/plugins/carrot2-util-attribute/@dot" />
		<pathelement path="${buildDirectory}/plugins/carrot2-util-common/@dot" />
		<pathelement path="${buildDirectory}/plugins/carrot2-util-log4j/@dot" />
		<fileset dir="${buildDirectory}/plugins" includes="**/*.jar" />
	</path>

	<!-- = = = = = = = = = = = = = = = = =
		          macrodef: buildMetadata          
		         = = = = = = = = = = = = = = = = = -->
	<macrodef name="buildMetadata">
		<attribute name="project.loc" />
		<sequential>
			<java classname="org.carrot2.util.attribute.BindableMetadataXmlSerializer"
			      failonerror="true">
				<classpath refid="attribute.classpath"/>
				<arg file="@{project.loc}/src" />
				<arg file="@{project.loc}/META-INF" />
				<arg value="${java.source.common.attributes}" />
			</java>
		</sequential>
	</macrodef>

	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- Add on <ant> task for each top level element being built. -->
	<!-- ===================================================================== -->

	<target name="allElements">
		<antcall target="allElementsDelegator" />
	</target>

	<!-- ===================================================================== -->
	<!-- ===================================================================== -->
	<target name="getBaseComponents" depends="checkLocalBase" unless="skipBase">
		<get src="${eclipseBaseURL}"
		     dest="${buildDirectory}/../temp-base.zip" />
		<unzip dest="${base}"
		       overwrite="true"
		       src="${buildDirectory}/../temp-base.zip" />
	</target>

	<target name="checkLocalBase">
		<available file="${base}" property="skipBase" />
	</target>

	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- Replace values for mapsCheckoutTag as desired. -->
	<!-- ===================================================================== -->
	<target name="getMapFiles" depends="checkLocalMaps" unless="skipMaps">
		<property name="mapsCheckoutTag" value="HEAD" />
		<cvs cvsRoot="${mapsRepo}"
		     package="${mapsRoot}"
		     dest="${buildDirectory}/maps"
		     tag="${mapsCheckoutTag}" />
	</target>

	<target name="checkLocalMaps">
		<available property="skipMaps" file="${buildDirectory}/maps" />
	</target>

	<target name="tagMapFiles" if="tagMaps">
		<cvs dest="${buildDirectory}/maps/${mapsRoot}"
		     command="tag ${mapsTagTag}" />
	</target>

	<!-- ===================================================================== -->

	<target name="clean" unless="noclean">
		<antcall target="allElements">
			<param name="target" value="cleanElement" />
		</antcall>
	</target>

	<target name="gatherLogs">
		<mkdir dir="${buildDirectory}/${buildLabel}/compilelogs" />
		<antcall target="allElements">
			<param name="target" value="gatherLogs" />
		</antcall>
		<unzip dest="${buildDirectory}/${buildLabel}/compilelogs"
		       overwrite="true">
			<fileset dir="${buildDirectory}/features">
				<include name="**/*.log.zip" />
			</fileset>
		</unzip>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
		<mkdir dir="${buildDirectory}" />
	</target>

	<!-- ================================= 
          target: fetchBuildFiles              
         ================================= -->
	<target name="fetchBuildFiles">
		<copy todir="${buildDirectory}/plugins">
			<fileset dir="${carrot2.dir}/core">
				<patternset id="to.exclude">
					<exclude name="**/.svn/**" />
					<exclude name="**/tmp/**" />
					<exclude name="**/.clover/**" />
					<exclude name="**/*test*/**" />
				</patternset>
			</fileset>
			<fileset dir="${carrot2.dir}/lib">
				<patternset refid="to.exclude" />
			</fileset>
		</copy>
		<copy todir="${buildDirectory}/plugins">
			<fileset dir="${carrot2.dir}/workbench">
				<patternset refid="to.exclude" />
				<include name="org.carrot2?*/**" />
				<exclude name="org.carrot2.workbench.test/**" />
				<exclude name="org.carrot2.workbench/**" />
			</fileset>
		</copy>
		<copy todir="${buildDirectory}/features/org.carrot2.workbench">
			<fileset dir="${carrot2.dir}/workbench/org.carrot2.workbench">
				<patternset refid="to.exclude" />
			</fileset>
		</copy>
	</target>

	<!-- ================================= 
          target: fetchTestFiles              
         ================================= -->
	<target name="fetchTestFiles" depends="fetchBuildFiles">
		<patternset id="to.exclude">
			<exclude name="**/.svn/**" />
			<exclude name="**/tmp/**" />
			<exclude name="**/.clover/**" />
		</patternset>
		<copy todir="${buildDirectory}/plugins">
			<fileset dir="${carrot2.dir}/workbench">
				<patternset refid="to.exclude" />
			</fileset>
		</copy>
		<copy todir="${buildDirectory}/features">
			<fileset dir="${carrot2.dir}/workbench">
				<include name="org.carrot2.workbench.test/**" />
				<patternset refid="to.exclude" />
			</fileset>
		</copy>
	</target>


	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
		<condition property="fetchTarget"
		           value="fetchTestFiles"
		           else="fetchBuildFiles">
			<equals arg1="${build.type}" arg2="test" />
		</condition>
		<antcall target="${fetchTarget}" />
		<antcall target="getBaseComponents" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="postFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
		<antcall target="clean" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running assemble. -->
	<!-- ===================================================================== -->
	<target name="preAssemble">
		<buildMetadata project.loc="${buildDirectory}/plugins/carrot2-algorithm-lingo" />
		<buildMetadata project.loc="${buildDirectory}/plugins/carrot2-algorithm-stc" />
		<buildMetadata project.loc="${buildDirectory}/plugins/org.carrot2.workbench.editors" />
		<buildMetadata project.loc="${buildDirectory}/plugins/carrot2-algorithm-synthetic" />
		<buildMetadata project.loc="${buildDirectory}/plugins/carrot2-source-etools" />
		<buildMetadata project.loc="${buildDirectory}/plugins/carrot2-source-yahoo" />
		<buildMetadata project.loc="${buildDirectory}/plugins/carrot2-source-xml" />
		<buildMetadata project.loc="${buildDirectory}/plugins/carrot2-source-microsoft" />
		<buildMetadata project.loc="${buildDirectory}/plugins/carrot2-source-pubmed" />
		<buildMetadata project.loc="${buildDirectory}/plugins/carrot2-source-opensearch" />
		<buildMetadata project.loc="${buildDirectory}/plugins/carrot2-source-boss" />
		<buildMetadata project.loc="${buildDirectory}/plugins/carrot2-source-google-desktop" />
		<buildMetadata project.loc="${buildDirectory}/plugins/carrot2-source-solr" />
		<buildMetadata project.loc="${buildDirectory}/plugins/carrot2-source-lucene" />
		<buildMetadata project.loc="${buildDirectory}/plugins/carrot2-source-ambient" />
		<buildMetadata project.loc="${buildDirectory}/plugins/carrot2-util-text" />
		<buildMetadata project.loc="${buildDirectory}/plugins/carrot2-core" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running assemble. -->
	<!-- ===================================================================== -->
	<target name="postAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running package. -->
	<!-- ===================================================================== -->
	<target name="prePackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running package. -->
	<!-- ===================================================================== -->
	<target name="postPackage">
	</target>


	<!-- ===================================================================== -->
	<!-- Steps to do after the build is done. -->
	<!-- ===================================================================== -->
	<target name="postBuild">
		<antcall target="gatherLogs" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to test the build results -->
	<!-- ===================================================================== -->
	<target name="test">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to publish the build results -->
	<!-- ===================================================================== -->
	<target name="publish">
	</target>

	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
