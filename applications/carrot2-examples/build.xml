<!--
     A build script that checks whether Carrot2 API examples compile
     and run without exceptions.
  -->
<project name="carrot2.api" default="carrot2.api.test">
  <!--
       Builds the examples.
    -->
  <target name="carrot2.api.build">
    <mkdir dir="tmp" />
    <mkdir dir="tmp/classes" />

    <javac srcdir="examples"
           destdir="tmp/classes"
           compiler="modern"
           source="1.5"
           target="1.5"
           encoding="UTF-8">
      <classpath>
        <fileset dir=".">
          <include name="**/*.jar" />
        </fileset>
      </classpath>
    </javac>

    <copy todir="tmp/classes">
      <fileset dir="examples/">
        <include name="suites/**" />
        <include name="org/carrot2/examples/core/algorithm-lingo-attributes.xml" />
      </fileset>
    </copy>
  </target>

  <!-- Runs selected classes -->
  <target name="carrot2.api.test" depends="carrot2.api.build">
    <!-- Run some example classes -->
    <run.example classname="org.carrot2.examples.clustering.ClusteringDocumentList" />
    <run.example classname="org.carrot2.examples.clustering.UsingCachingController" />
    <run.example classname="org.carrot2.examples.clustering.UsingComponentSuites" />
    <run.example classname="org.carrot2.examples.clustering.UsingCustomLanguageModel" />
    <run.example classname="org.carrot2.examples.core.LoadingAttributeValuesFromXml" />
    <run.example classname="org.carrot2.examples.core.SavingAttributeValuesToXml" />

    <!-- Create a simple Lucene index and run Lucene examples. -->
    <delete dir="index" failonerror="true" includeemptydirs="true" />
    <run.example classname="org.carrot2.examples.CreateLuceneIndex">
      <arg file="index" />
    </run.example>
    <run.example classname="org.carrot2.examples.clustering.ClusteringDataFromLucene">
      <arg file="index" />
    </run.example>
    <run.example classname="org.carrot2.examples.clustering.ClusteringDataFromLuceneWithCustomFields">
      <arg file="index" />
    </run.example>
  </target>

  <!-- Removes all compiled binaries -->
  <target name="clean">
    <delete dir="tmp" />
  </target>

  <!-- A macro that runs the specified class. -->
  <macrodef name="run.example">
    <attribute name="classname" />
    <element name="args" implicit="true" optional="true" />

    <sequential>
      <echo>Running: @{classname}</echo>
      <java classname="@{classname}" logError="true"
            failonerror="true" outputproperty="dev.null">
        <classpath>
          <fileset dir=".">
            <include name="**/*.jar" />
          </fileset>
          <pathelement location="tmp/classes"/>
        </classpath>
        <args />
      </java>
    </sequential>
  </macrodef>
</project>
