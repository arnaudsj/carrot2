%!PS-Adobe-2.0 EPSF-2.0
%%Title: stc-preproc.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sat Mar 27 14:06:05 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 616 531
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (stc-preproc.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (dweiss)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Mar 27 14:06:05 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 448 M
10470 0 V
stroke
LTb
714 448 M
63 0 V
stroke
630 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 1737 M
10470 0 V
stroke
LTb
714 1737 M
63 0 V
stroke
630 1737 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 3025 M
10470 0 V
stroke
LTb
714 3025 M
63 0 V
stroke
630 3025 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 4314 M
10470 0 V
stroke
LTb
714 4314 M
63 0 V
stroke
630 4314 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 5602 M
10470 0 V
stroke
LTb
714 5602 M
63 0 V
stroke
630 5602 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 6891 M
10470 0 V
stroke
LTb
714 6891 M
63 0 V
stroke
630 6891 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 8179 M
10470 0 V
stroke
LTb
714 8179 M
63 0 V
stroke
630 8179 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 9468 M
10470 0 V
stroke
LTb
714 9468 M
63 0 V
stroke
630 9468 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 7)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 448 M
0 9020 V
stroke
LTb
714 448 M
0 63 V
stroke
714 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
1877 448 M
0 9020 V
stroke
LTb
1877 448 M
0 63 V
stroke
1877 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3041 448 M
0 9020 V
stroke
LTb
3041 448 M
0 63 V
stroke
3041 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4204 448 M
0 9020 V
stroke
LTb
4204 448 M
0 63 V
stroke
4204 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5367 448 M
0 9020 V
stroke
LTb
5367 448 M
0 63 V
stroke
5367 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6531 448 M
0 9020 V
stroke
LTb
6531 448 M
0 63 V
stroke
6531 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
7694 448 M
0 9020 V
stroke
LTb
7694 448 M
0 63 V
stroke
7694 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 12000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
8857 448 M
0 9020 V
stroke
LTb
8857 448 M
0 63 V
stroke
8857 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 14000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
10021 448 M
0 8677 V
0 280 R
0 63 V
stroke
LTb
10021 448 M
0 63 V
stroke
10021 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 16000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
11184 448 M
0 9020 V
stroke
LTb
11184 448 M
0 63 V
stroke
11184 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 18000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
714 9468 N
714 448 L
10470 0 V
0 9020 V
714 9468 L
Z stroke
LCb setrgbcolor
308 4958 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (time [s])]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
5949 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (documents)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
10533 9335 M
[ [(Helvetica) 140.0 0.0 true true 0 (Basic Preprocessing)]
] -46.7 MRshow
LT0
10617 9335 M
399 0 V
772 796 M
830 551 L
58 -26 V
59 -13 V
58 0 V
58 0 V
58 13 V
58 26 V
58 -13 V
59 13 V
58 13 V
58 13 V
58 0 V
58 26 V
58 0 V
59 25 V
58 13 V
58 13 V
58 13 V
58 26 V
58 13 V
59 13 V
58 12 V
58 26 V
58 26 V
58 26 V
58 38 V
59 0 V
58 26 V
58 26 V
58 13 V
58 26 V
58 25 V
59 26 V
58 26 V
58 26 V
58 38 V
58 26 V
58 13 V
59 26 V
58 26 V
58 25 V
58 26 V
58 26 V
58 26 V
59 38 V
58 26 V
58 26 V
58 26 V
58 64 V
58 0 V
59 39 V
58 51 V
58 13 V
58 26 V
58 51 V
58 26 V
59 78 V
58 0 V
58 38 V
58 39 V
58 39 V
58 38 V
59 26 V
58 39 V
58 25 V
58 52 V
58 26 V
58 38 V
59 78 V
58 13 V
58 38 V
58 39 V
58 51 V
58 52 V
59 77 V
58 0 V
58 65 V
58 116 V
58 77 V
58 39 V
59 38 V
58 39 V
58 77 V
58 26 V
58 52 V
58 51 V
59 103 V
58 -26 V
58 39 V
58 52 V
58 64 V
58 26 V
59 51 V
58 91 V
58 12 V
58 52 V
58 77 V
58 0 V
59 39 V
58 77 V
58 78 V
58 0 V
58 103 V
58 -39 V
59 77 V
stroke 6880 3901 M
58 39 V
58 64 V
58 104 V
58 51 V
58 65 V
59 51 V
58 26 V
58 90 V
58 39 V
58 77 V
58 -13 V
59 65 V
58 103 V
58 25 V
58 103 V
58 39 V
58 39 V
59 77 V
58 65 V
58 141 V
58 13 V
58 65 V
58 51 V
59 13 V
58 52 V
58 128 V
58 78 V
58 64 V
58 90 V
59 65 V
58 51 V
58 -38 V
58 90 V
58 13 V
58 64 V
59 90 V
58 207 V
58 90 V
58 26 V
58 77 V
58 -13 V
59 116 V
58 51 V
58 39 V
58 77 V
58 91 V
58 51 V
59 155 V
58 -65 V
58 26 V
58 142 V
58 77 V
58 78 V
59 77 V
58 103 V
58 116 V
58 -39 V
58 26 V
58 103 V
59 65 V
58 244 V
58 26 V
58 116 V
58 -77 V
58 103 V
59 103 V
58 167 V
58 116 V
58 52 V
58 39 V
58 90 V
59 77 V
58 26 V
58 103 V
772 796 Pls
830 551 Pls
888 525 Pls
947 512 Pls
1005 512 Pls
1063 512 Pls
1121 525 Pls
1179 551 Pls
1237 538 Pls
1296 551 Pls
1354 564 Pls
1412 577 Pls
1470 577 Pls
1528 603 Pls
1586 603 Pls
1645 628 Pls
1703 641 Pls
1761 654 Pls
1819 667 Pls
1877 693 Pls
1935 706 Pls
1994 719 Pls
2052 731 Pls
2110 757 Pls
2168 783 Pls
2226 809 Pls
2284 847 Pls
2343 847 Pls
2401 873 Pls
2459 899 Pls
2517 912 Pls
2575 938 Pls
2633 963 Pls
2692 989 Pls
2750 1015 Pls
2808 1041 Pls
2866 1079 Pls
2924 1105 Pls
2982 1118 Pls
3041 1144 Pls
3099 1170 Pls
3157 1195 Pls
3215 1221 Pls
3273 1247 Pls
3331 1273 Pls
3390 1311 Pls
3448 1337 Pls
3506 1363 Pls
3564 1389 Pls
3622 1453 Pls
3680 1453 Pls
3739 1492 Pls
3797 1543 Pls
3855 1556 Pls
3913 1582 Pls
3971 1633 Pls
4029 1659 Pls
4088 1737 Pls
4146 1737 Pls
4204 1775 Pls
4262 1814 Pls
4320 1853 Pls
4378 1891 Pls
4437 1917 Pls
4495 1956 Pls
4553 1981 Pls
4611 2033 Pls
4669 2059 Pls
4727 2097 Pls
4786 2175 Pls
4844 2188 Pls
4902 2226 Pls
4960 2265 Pls
5018 2316 Pls
5076 2368 Pls
5135 2445 Pls
5193 2445 Pls
5251 2510 Pls
5309 2626 Pls
5367 2703 Pls
5425 2742 Pls
5484 2780 Pls
5542 2819 Pls
5600 2896 Pls
5658 2922 Pls
5716 2974 Pls
5774 3025 Pls
5833 3128 Pls
5891 3102 Pls
5949 3141 Pls
6007 3193 Pls
6065 3257 Pls
6123 3283 Pls
6182 3334 Pls
6240 3425 Pls
6298 3437 Pls
6356 3489 Pls
6414 3566 Pls
6472 3566 Pls
6531 3605 Pls
6589 3682 Pls
6647 3760 Pls
6705 3760 Pls
6763 3863 Pls
6821 3824 Pls
6880 3901 Pls
6938 3940 Pls
6996 4004 Pls
7054 4108 Pls
7112 4159 Pls
7170 4224 Pls
7229 4275 Pls
7287 4301 Pls
7345 4391 Pls
7403 4430 Pls
7461 4507 Pls
7519 4494 Pls
7578 4559 Pls
7636 4662 Pls
7694 4687 Pls
7752 4790 Pls
7810 4829 Pls
7868 4868 Pls
7927 4945 Pls
7985 5010 Pls
8043 5151 Pls
8101 5164 Pls
8159 5229 Pls
8217 5280 Pls
8276 5293 Pls
8334 5345 Pls
8392 5473 Pls
8450 5551 Pls
8508 5615 Pls
8566 5705 Pls
8625 5770 Pls
8683 5821 Pls
8741 5783 Pls
8799 5873 Pls
8857 5886 Pls
8915 5950 Pls
8974 6040 Pls
9032 6247 Pls
9090 6337 Pls
9148 6363 Pls
9206 6440 Pls
9264 6427 Pls
9323 6543 Pls
9381 6594 Pls
9439 6633 Pls
9497 6710 Pls
9555 6801 Pls
9613 6852 Pls
9672 7007 Pls
9730 6942 Pls
9788 6968 Pls
9846 7110 Pls
9904 7187 Pls
9962 7265 Pls
10021 7342 Pls
10079 7445 Pls
10137 7561 Pls
10195 7522 Pls
10253 7548 Pls
10311 7651 Pls
10370 7716 Pls
10428 7960 Pls
10486 7986 Pls
10544 8102 Pls
10602 8025 Pls
10660 8128 Pls
10719 8231 Pls
10777 8398 Pls
10835 8514 Pls
10893 8566 Pls
10951 8605 Pls
11009 8695 Pls
11068 8772 Pls
11126 8798 Pls
11184 8901 Pls
10816 9335 Pls
1.000 UP
1.000 UL
LT1
LTb
10533 9195 M
[ [(Helvetica) 140.0 0.0 true true 0 (STC)]
] -46.7 MRshow
LT1
10617 9195 M
399 0 V
772 538 M
58 -13 V
58 26 V
59 -26 V
58 0 V
58 0 V
58 13 V
58 13 V
58 13 V
59 13 V
58 13 V
58 13 V
58 25 V
58 0 V
58 13 V
59 26 V
58 13 V
58 26 V
58 13 V
58 12 V
58 13 V
59 26 V
58 26 V
58 39 V
58 0 V
58 25 V
58 26 V
59 26 V
58 26 V
58 25 V
58 13 V
58 26 V
58 26 V
59 26 V
58 25 V
58 39 V
58 26 V
58 26 V
58 25 V
59 26 V
58 26 V
58 26 V
58 38 V
58 78 V
58 -26 V
59 26 V
58 64 V
58 0 V
58 52 V
58 38 V
58 26 V
59 26 V
58 38 V
58 26 V
58 78 V
58 12 V
58 39 V
59 39 V
58 38 V
58 26 V
58 52 V
58 38 V
58 52 V
59 26 V
58 38 V
58 26 V
58 77 V
58 13 V
58 39 V
59 64 V
58 26 V
58 65 V
58 25 V
58 26 V
58 65 V
59 38 V
58 52 V
58 38 V
58 129 V
58 116 V
58 26 V
59 52 V
58 38 V
58 103 V
58 26 V
58 39 V
58 77 V
59 26 V
58 39 V
58 38 V
58 77 V
58 26 V
58 52 V
59 77 V
58 65 V
58 0 V
58 64 V
58 39 V
58 90 V
59 38 V
58 65 V
58 39 V
58 64 V
stroke 6705 4056 M
58 39 V
58 25 V
59 65 V
58 26 V
58 128 V
58 65 V
58 51 V
58 39 V
59 90 V
58 13 V
58 65 V
58 64 V
58 77 V
58 78 V
59 -13 V
58 103 V
58 13 V
58 77 V
58 52 V
58 77 V
59 51 V
58 78 V
58 64 V
58 129 V
58 0 V
58 90 V
59 26 V
58 52 V
58 103 V
58 90 V
58 51 V
58 104 V
59 77 V
58 -13 V
58 51 V
58 65 V
58 90 V
58 13 V
59 103 V
58 142 V
58 51 V
58 103 V
58 26 V
58 52 V
59 90 V
58 193 V
58 -26 V
58 65 V
58 77 V
58 103 V
59 13 V
58 78 V
58 64 V
58 90 V
58 103 V
58 39 V
59 77 V
58 78 V
58 51 V
58 39 V
58 103 V
58 103 V
59 167 V
58 -38 V
58 64 V
58 52 V
58 141 V
58 52 V
59 155 V
58 128 V
58 39 V
58 65 V
58 90 V
58 245 V
59 -52 V
58 90 V
58 129 V
772 538 Crs
830 525 Crs
888 551 Crs
947 525 Crs
1005 525 Crs
1063 525 Crs
1121 538 Crs
1179 551 Crs
1237 564 Crs
1296 577 Crs
1354 590 Crs
1412 603 Crs
1470 628 Crs
1528 628 Crs
1586 641 Crs
1645 667 Crs
1703 680 Crs
1761 706 Crs
1819 719 Crs
1877 731 Crs
1935 744 Crs
1994 770 Crs
2052 796 Crs
2110 835 Crs
2168 835 Crs
2226 860 Crs
2284 886 Crs
2343 912 Crs
2401 938 Crs
2459 963 Crs
2517 976 Crs
2575 1002 Crs
2633 1028 Crs
2692 1054 Crs
2750 1079 Crs
2808 1118 Crs
2866 1144 Crs
2924 1170 Crs
2982 1195 Crs
3041 1221 Crs
3099 1247 Crs
3157 1273 Crs
3215 1311 Crs
3273 1389 Crs
3331 1363 Crs
3390 1389 Crs
3448 1453 Crs
3506 1453 Crs
3564 1505 Crs
3622 1543 Crs
3680 1569 Crs
3739 1595 Crs
3797 1633 Crs
3855 1659 Crs
3913 1737 Crs
3971 1749 Crs
4029 1788 Crs
4088 1827 Crs
4146 1865 Crs
4204 1891 Crs
4262 1943 Crs
4320 1981 Crs
4378 2033 Crs
4437 2059 Crs
4495 2097 Crs
4553 2123 Crs
4611 2200 Crs
4669 2213 Crs
4727 2252 Crs
4786 2316 Crs
4844 2342 Crs
4902 2407 Crs
4960 2432 Crs
5018 2458 Crs
5076 2523 Crs
5135 2561 Crs
5193 2613 Crs
5251 2651 Crs
5309 2780 Crs
5367 2896 Crs
5425 2922 Crs
5484 2974 Crs
5542 3012 Crs
5600 3115 Crs
5658 3141 Crs
5716 3180 Crs
5774 3257 Crs
5833 3283 Crs
5891 3322 Crs
5949 3360 Crs
6007 3437 Crs
6065 3463 Crs
6123 3515 Crs
6182 3592 Crs
6240 3657 Crs
6298 3657 Crs
6356 3721 Crs
6414 3760 Crs
6472 3850 Crs
6531 3888 Crs
6589 3953 Crs
6647 3992 Crs
6705 4056 Crs
6763 4095 Crs
6821 4120 Crs
6880 4185 Crs
6938 4211 Crs
6996 4339 Crs
7054 4404 Crs
7112 4455 Crs
7170 4494 Crs
7229 4584 Crs
7287 4597 Crs
7345 4662 Crs
7403 4726 Crs
7461 4803 Crs
7519 4881 Crs
7578 4868 Crs
7636 4971 Crs
7694 4984 Crs
7752 5061 Crs
7810 5113 Crs
7868 5190 Crs
7927 5241 Crs
7985 5319 Crs
8043 5383 Crs
8101 5512 Crs
8159 5512 Crs
8217 5602 Crs
8276 5628 Crs
8334 5680 Crs
8392 5783 Crs
8450 5873 Crs
8508 5924 Crs
8566 6028 Crs
8625 6105 Crs
8683 6092 Crs
8741 6143 Crs
8799 6208 Crs
8857 6298 Crs
8915 6311 Crs
8974 6414 Crs
9032 6556 Crs
9090 6607 Crs
9148 6710 Crs
9206 6736 Crs
9264 6788 Crs
9323 6878 Crs
9381 7071 Crs
9439 7045 Crs
9497 7110 Crs
9555 7187 Crs
9613 7290 Crs
9672 7303 Crs
9730 7381 Crs
9788 7445 Crs
9846 7535 Crs
9904 7638 Crs
9962 7677 Crs
10021 7754 Crs
10079 7832 Crs
10137 7883 Crs
10195 7922 Crs
10253 8025 Crs
10311 8128 Crs
10370 8295 Crs
10428 8257 Crs
10486 8321 Crs
10544 8373 Crs
10602 8514 Crs
10660 8566 Crs
10719 8721 Crs
10777 8849 Crs
10835 8888 Crs
10893 8953 Crs
10951 9043 Crs
11009 9288 Crs
11068 9236 Crs
11126 9326 Crs
11184 9455 Crs
10816 9195 Crs
1.000 UL
LTb
714 9468 N
714 448 L
10470 0 V
0 9020 V
714 9468 L
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
