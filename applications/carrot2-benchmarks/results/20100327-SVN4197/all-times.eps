%!PS-Adobe-2.0 EPSF-2.0
%%Title: all-times.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sat Mar 27 14:06:05 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 616 531
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (all-times.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (dweiss)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Mar 27 14:06:05 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
882 448 M
10302 0 V
stroke
LTb
882 448 M
63 0 V
stroke
798 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 2252 M
10302 0 V
stroke
LTb
882 2252 M
63 0 V
stroke
798 2252 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 4056 M
10302 0 V
stroke
LTb
882 4056 M
63 0 V
stroke
798 4056 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 5860 M
10302 0 V
stroke
LTb
882 5860 M
63 0 V
stroke
798 5860 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 150)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 7664 M
10302 0 V
stroke
LTb
882 7664 M
63 0 V
stroke
798 7664 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 9468 M
10302 0 V
stroke
LTb
882 9468 M
63 0 V
stroke
798 9468 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 250)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 448 M
0 9020 V
stroke
LTb
882 448 M
0 63 V
stroke
882 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2027 448 M
0 9020 V
stroke
LTb
2027 448 M
0 63 V
stroke
2027 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3171 448 M
0 9020 V
stroke
LTb
3171 448 M
0 63 V
stroke
3171 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4316 448 M
0 9020 V
stroke
LTb
4316 448 M
0 63 V
stroke
4316 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5461 448 M
0 9020 V
stroke
LTb
5461 448 M
0 63 V
stroke
5461 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6605 448 M
0 9020 V
stroke
LTb
6605 448 M
0 63 V
stroke
6605 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
7750 448 M
0 9020 V
stroke
LTb
7750 448 M
0 63 V
stroke
7750 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 12000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
8895 448 M
0 9020 V
stroke
LTb
8895 448 M
0 63 V
stroke
8895 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 14000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
10039 448 M
0 8537 V
0 420 R
0 63 V
stroke
LTb
10039 448 M
0 63 V
stroke
10039 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 16000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
11184 448 M
0 9020 V
stroke
LTb
11184 448 M
0 63 V
stroke
11184 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 18000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
882 9468 N
882 448 L
10302 0 V
0 9020 V
882 9468 L
Z stroke
LCb setrgbcolor
308 4958 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (time [s])]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
6033 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (documents)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
10533 9335 M
[ [(Helvetica) 140.0 0.0 true true 0 (Basic Preprocessing)]
] -46.7 MRshow
LT0
10617 9335 M
399 0 V
939 458 M
57 -7 V
58 -1 V
57 0 V
57 0 V
57 0 V
58 0 V
57 1 V
57 0 V
57 0 V
58 0 V
57 1 V
57 0 V
57 0 V
58 0 V
57 1 V
57 0 V
57 1 V
57 0 V
58 1 V
57 0 V
57 1 V
57 0 V
58 1 V
57 0 V
57 1 V
57 1 V
58 0 V
57 1 V
57 1 V
57 0 V
57 1 V
58 0 V
57 1 V
57 1 V
57 1 V
58 1 V
57 0 V
57 1 V
57 0 V
58 1 V
57 1 V
57 1 V
57 0 V
58 1 V
57 1 V
57 1 V
57 1 V
57 0 V
58 2 V
57 0 V
57 1 V
57 2 V
58 0 V
57 1 V
57 1 V
57 1 V
58 2 V
57 0 V
57 1 V
57 1 V
57 1 V
58 1 V
57 1 V
57 1 V
57 1 V
58 1 V
57 1 V
57 1 V
57 2 V
58 1 V
57 1 V
57 1 V
57 1 V
58 2 V
57 2 V
57 0 V
57 2 V
57 3 V
58 2 V
57 1 V
57 1 V
57 1 V
58 3 V
57 0 V
57 2 V
57 1 V
58 3 V
57 -1 V
57 1 V
57 2 V
57 2 V
58 0 V
57 2 V
57 2 V
57 1 V
58 1 V
57 2 V
57 0 V
57 1 V
58 3 V
57 2 V
57 0 V
stroke 6777 541 M
57 3 V
58 -1 V
57 2 V
57 1 V
57 2 V
57 2 V
58 2 V
57 2 V
57 1 V
57 1 V
58 2 V
57 1 V
57 3 V
57 -1 V
58 2 V
57 3 V
57 1 V
57 3 V
57 1 V
58 1 V
57 2 V
57 2 V
57 4 V
58 0 V
57 2 V
57 1 V
57 1 V
58 1 V
57 4 V
57 2 V
57 2 V
58 2 V
57 2 V
57 1 V
57 -1 V
57 3 V
58 0 V
57 2 V
57 3 V
57 5 V
58 3 V
57 1 V
57 2 V
57 -1 V
58 4 V
57 1 V
57 1 V
57 2 V
57 3 V
58 1 V
57 5 V
57 -2 V
57 1 V
58 4 V
57 2 V
57 2 V
57 2 V
58 3 V
57 3 V
57 -1 V
57 1 V
58 3 V
57 1 V
57 7 V
57 1 V
57 3 V
58 -2 V
57 3 V
57 3 V
57 5 V
58 3 V
57 1 V
57 1 V
57 3 V
58 2 V
57 1 V
57 3 V
939 458 Pls
996 451 Pls
1054 450 Pls
1111 450 Pls
1168 450 Pls
1225 450 Pls
1283 450 Pls
1340 451 Pls
1397 451 Pls
1454 451 Pls
1512 451 Pls
1569 452 Pls
1626 452 Pls
1683 452 Pls
1741 452 Pls
1798 453 Pls
1855 453 Pls
1912 454 Pls
1969 454 Pls
2027 455 Pls
2084 455 Pls
2141 456 Pls
2198 456 Pls
2256 457 Pls
2313 457 Pls
2370 458 Pls
2427 459 Pls
2485 459 Pls
2542 460 Pls
2599 461 Pls
2656 461 Pls
2713 462 Pls
2771 462 Pls
2828 463 Pls
2885 464 Pls
2942 465 Pls
3000 466 Pls
3057 466 Pls
3114 467 Pls
3171 467 Pls
3229 468 Pls
3286 469 Pls
3343 470 Pls
3400 470 Pls
3458 471 Pls
3515 472 Pls
3572 473 Pls
3629 474 Pls
3686 474 Pls
3744 476 Pls
3801 476 Pls
3858 477 Pls
3915 479 Pls
3973 479 Pls
4030 480 Pls
4087 481 Pls
4144 482 Pls
4202 484 Pls
4259 484 Pls
4316 485 Pls
4373 486 Pls
4430 487 Pls
4488 488 Pls
4545 489 Pls
4602 490 Pls
4659 491 Pls
4717 492 Pls
4774 493 Pls
4831 494 Pls
4888 496 Pls
4946 497 Pls
5003 498 Pls
5060 499 Pls
5117 500 Pls
5175 502 Pls
5232 504 Pls
5289 504 Pls
5346 506 Pls
5403 509 Pls
5461 511 Pls
5518 512 Pls
5575 513 Pls
5632 514 Pls
5690 517 Pls
5747 517 Pls
5804 519 Pls
5861 520 Pls
5919 523 Pls
5976 522 Pls
6033 523 Pls
6090 525 Pls
6147 527 Pls
6205 527 Pls
6262 529 Pls
6319 531 Pls
6376 532 Pls
6434 533 Pls
6491 535 Pls
6548 535 Pls
6605 536 Pls
6663 539 Pls
6720 541 Pls
6777 541 Pls
6834 544 Pls
6892 543 Pls
6949 545 Pls
7006 546 Pls
7063 548 Pls
7120 550 Pls
7178 552 Pls
7235 554 Pls
7292 555 Pls
7349 556 Pls
7407 558 Pls
7464 559 Pls
7521 562 Pls
7578 561 Pls
7636 563 Pls
7693 566 Pls
7750 567 Pls
7807 570 Pls
7864 571 Pls
7922 572 Pls
7979 574 Pls
8036 576 Pls
8093 580 Pls
8151 580 Pls
8208 582 Pls
8265 583 Pls
8322 584 Pls
8380 585 Pls
8437 589 Pls
8494 591 Pls
8551 593 Pls
8609 595 Pls
8666 597 Pls
8723 598 Pls
8780 597 Pls
8837 600 Pls
8895 600 Pls
8952 602 Pls
9009 605 Pls
9066 610 Pls
9124 613 Pls
9181 614 Pls
9238 616 Pls
9295 615 Pls
9353 619 Pls
9410 620 Pls
9467 621 Pls
9524 623 Pls
9581 626 Pls
9639 627 Pls
9696 632 Pls
9753 630 Pls
9810 631 Pls
9868 635 Pls
9925 637 Pls
9982 639 Pls
10039 641 Pls
10097 644 Pls
10154 647 Pls
10211 646 Pls
10268 647 Pls
10326 650 Pls
10383 651 Pls
10440 658 Pls
10497 659 Pls
10554 662 Pls
10612 660 Pls
10669 663 Pls
10726 666 Pls
10783 671 Pls
10841 674 Pls
10898 675 Pls
10955 676 Pls
11012 679 Pls
11070 681 Pls
11127 682 Pls
11184 685 Pls
10816 9335 Pls
1.000 UP
1.000 UL
LT1
LTb
10533 9195 M
[ [(Helvetica) 140.0 0.0 true true 0 (STC)]
] -46.7 MRshow
LT1
10617 9195 M
399 0 V
939 451 M
57 -1 V
58 1 V
57 -1 V
57 0 V
57 0 V
58 1 V
57 0 V
57 0 V
57 1 V
58 0 V
57 0 V
57 1 V
57 0 V
58 0 V
57 1 V
57 0 V
57 1 V
57 1 V
58 0 V
57 0 V
57 1 V
57 1 V
58 1 V
57 0 V
57 1 V
57 0 V
58 1 V
57 1 V
57 0 V
57 1 V
57 1 V
58 0 V
57 1 V
57 1 V
57 1 V
58 0 V
57 1 V
57 1 V
57 1 V
58 0 V
57 1 V
57 1 V
57 2 V
58 0 V
57 0 V
57 2 V
57 0 V
57 2 V
58 1 V
57 0 V
57 1 V
57 1 V
58 1 V
57 2 V
57 0 V
57 2 V
58 1 V
57 1 V
57 0 V
57 2 V
57 1 V
58 1 V
57 1 V
57 1 V
57 1 V
58 2 V
57 0 V
57 2 V
57 1 V
58 1 V
57 2 V
57 1 V
57 0 V
58 2 V
57 1 V
57 2 V
57 1 V
57 3 V
58 4 V
57 0 V
57 2 V
57 1 V
58 3 V
57 0 V
57 1 V
57 3 V
58 0 V
57 1 V
57 2 V
57 2 V
57 0 V
58 2 V
57 2 V
57 2 V
57 0 V
58 2 V
57 1 V
57 2 V
57 1 V
58 2 V
57 1 V
57 2 V
stroke 6777 549 M
57 1 V
58 1 V
57 2 V
57 0 V
57 4 V
57 2 V
58 1 V
57 1 V
57 3 V
57 0 V
58 2 V
57 2 V
57 2 V
57 2 V
58 0 V
57 3 V
57 0 V
57 2 V
57 2 V
58 2 V
57 1 V
57 2 V
57 2 V
58 4 V
57 0 V
57 2 V
57 1 V
58 1 V
57 3 V
57 3 V
57 1 V
58 3 V
57 2 V
57 0 V
57 1 V
57 2 V
58 3 V
57 0 V
57 3 V
57 4 V
58 1 V
57 3 V
57 1 V
57 2 V
58 2 V
57 5 V
57 0 V
57 2 V
57 2 V
58 3 V
57 0 V
57 2 V
57 2 V
58 2 V
57 3 V
57 1 V
57 3 V
58 2 V
57 1 V
57 1 V
57 3 V
58 3 V
57 5 V
57 -1 V
57 1 V
57 2 V
58 4 V
57 1 V
57 5 V
57 3 V
58 1 V
57 2 V
57 3 V
57 7 V
58 -2 V
57 3 V
57 3 V
939 451 Crs
996 450 Crs
1054 451 Crs
1111 450 Crs
1168 450 Crs
1225 450 Crs
1283 451 Crs
1340 451 Crs
1397 451 Crs
1454 452 Crs
1512 452 Crs
1569 452 Crs
1626 453 Crs
1683 453 Crs
1741 453 Crs
1798 454 Crs
1855 454 Crs
1912 455 Crs
1969 456 Crs
2027 456 Crs
2084 456 Crs
2141 457 Crs
2198 458 Crs
2256 459 Crs
2313 459 Crs
2370 460 Crs
2427 460 Crs
2485 461 Crs
2542 462 Crs
2599 462 Crs
2656 463 Crs
2713 464 Crs
2771 464 Crs
2828 465 Crs
2885 466 Crs
2942 467 Crs
3000 467 Crs
3057 468 Crs
3114 469 Crs
3171 470 Crs
3229 470 Crs
3286 471 Crs
3343 472 Crs
3400 474 Crs
3458 474 Crs
3515 474 Crs
3572 476 Crs
3629 476 Crs
3686 478 Crs
3744 479 Crs
3801 479 Crs
3858 480 Crs
3915 481 Crs
3973 482 Crs
4030 484 Crs
4087 484 Crs
4144 486 Crs
4202 487 Crs
4259 488 Crs
4316 488 Crs
4373 490 Crs
4430 491 Crs
4488 492 Crs
4545 493 Crs
4602 494 Crs
4659 495 Crs
4717 497 Crs
4774 497 Crs
4831 499 Crs
4888 500 Crs
4946 501 Crs
5003 503 Crs
5060 504 Crs
5117 504 Crs
5175 506 Crs
5232 507 Crs
5289 509 Crs
5346 510 Crs
5403 513 Crs
5461 517 Crs
5518 517 Crs
5575 519 Crs
5632 520 Crs
5690 523 Crs
5747 523 Crs
5804 524 Crs
5861 527 Crs
5919 527 Crs
5976 528 Crs
6033 530 Crs
6090 532 Crs
6147 532 Crs
6205 534 Crs
6262 536 Crs
6319 538 Crs
6376 538 Crs
6434 540 Crs
6491 541 Crs
6548 543 Crs
6605 544 Crs
6663 546 Crs
6720 547 Crs
6777 549 Crs
6834 550 Crs
6892 551 Crs
6949 553 Crs
7006 553 Crs
7063 557 Crs
7120 559 Crs
7178 560 Crs
7235 561 Crs
7292 564 Crs
7349 564 Crs
7407 566 Crs
7464 568 Crs
7521 570 Crs
7578 572 Crs
7636 572 Crs
7693 575 Crs
7750 575 Crs
7807 577 Crs
7864 579 Crs
7922 581 Crs
7979 582 Crs
8036 584 Crs
8093 586 Crs
8151 590 Crs
8208 590 Crs
8265 592 Crs
8322 593 Crs
8380 594 Crs
8437 597 Crs
8494 600 Crs
8551 601 Crs
8609 604 Crs
8666 606 Crs
8723 606 Crs
8780 607 Crs
8837 609 Crs
8895 612 Crs
8952 612 Crs
9009 615 Crs
9066 619 Crs
9124 620 Crs
9181 623 Crs
9238 624 Crs
9295 626 Crs
9353 628 Crs
9410 633 Crs
9467 633 Crs
9524 635 Crs
9581 637 Crs
9639 640 Crs
9696 640 Crs
9753 642 Crs
9810 644 Crs
9868 646 Crs
9925 649 Crs
9982 650 Crs
10039 653 Crs
10097 655 Crs
10154 656 Crs
10211 657 Crs
10268 660 Crs
10326 663 Crs
10383 668 Crs
10440 667 Crs
10497 668 Crs
10554 670 Crs
10612 674 Crs
10669 675 Crs
10726 680 Crs
10783 683 Crs
10841 684 Crs
10898 686 Crs
10955 689 Crs
11012 696 Crs
11070 694 Crs
11127 697 Crs
11184 700 Crs
10816 9195 Crs
1.000 UP
1.000 UL
LT2
LTb
10533 9055 M
[ [(Helvetica) 140.0 0.0 true true 0 (LINGO)]
] -46.7 MRshow
LT2
10617 9055 M
399 0 V
939 470 M
57 -3 V
58 -4 V
57 2 V
57 6 V
57 4 V
58 5 V
57 7 V
57 8 V
57 6 V
58 9 V
57 8 V
57 11 V
57 15 V
58 10 V
57 12 V
57 15 V
57 13 V
57 16 V
58 20 V
57 19 V
57 23 V
57 23 V
58 22 V
57 23 V
57 16 V
57 24 V
58 25 V
57 22 V
57 20 V
57 35 V
57 17 V
58 26 V
57 28 V
57 32 V
57 30 V
58 31 V
57 24 V
57 47 V
57 36 V
58 66 V
57 5 V
57 37 V
57 44 V
58 70 V
57 43 V
57 64 V
57 29 V
57 31 V
58 28 V
57 75 V
57 2 V
57 101 V
58 9 V
57 91 V
57 58 V
57 48 V
58 7 V
57 103 V
57 5 V
57 147 V
57 -2 V
58 119 V
57 -29 V
57 335 V
57 27 V
58 74 V
57 78 V
57 69 V
57 -111 V
58 -24 V
57 161 V
57 2955 V
57 -2806 V
58 481 V
57 73 V
57 106 V
57 -493 V
57 319 V
58 -73 V
57 264 V
57 490 V
57 167 V
58 -408 V
57 -100 V
57 279 V
57 483 V
58 110 V
57 116 V
57 -559 V
57 311 V
57 524 V
58 104 V
57 -372 V
57 -102 V
57 788 V
58 139 V
57 -745 V
57 462 V
57 206 V
58 1598 V
57 -890 V
57 -375 V
stroke 6777 5965 M
57 1713 V
58 312 V
57 -1719 V
939 470 Star
996 467 Star
1054 463 Star
1111 465 Star
1168 471 Star
1225 475 Star
1283 480 Star
1340 487 Star
1397 495 Star
1454 501 Star
1512 510 Star
1569 518 Star
1626 529 Star
1683 544 Star
1741 554 Star
1798 566 Star
1855 581 Star
1912 594 Star
1969 610 Star
2027 630 Star
2084 649 Star
2141 672 Star
2198 695 Star
2256 717 Star
2313 740 Star
2370 756 Star
2427 780 Star
2485 805 Star
2542 827 Star
2599 847 Star
2656 882 Star
2713 899 Star
2771 925 Star
2828 953 Star
2885 985 Star
2942 1015 Star
3000 1046 Star
3057 1070 Star
3114 1117 Star
3171 1153 Star
3229 1219 Star
3286 1224 Star
3343 1261 Star
3400 1305 Star
3458 1375 Star
3515 1418 Star
3572 1482 Star
3629 1511 Star
3686 1542 Star
3744 1570 Star
3801 1645 Star
3858 1647 Star
3915 1748 Star
3973 1757 Star
4030 1848 Star
4087 1906 Star
4144 1954 Star
4202 1961 Star
4259 2064 Star
4316 2069 Star
4373 2216 Star
4430 2214 Star
4488 2333 Star
4545 2304 Star
4602 2639 Star
4659 2666 Star
4717 2740 Star
4774 2818 Star
4831 2887 Star
4888 2776 Star
4946 2752 Star
5003 2913 Star
5060 5868 Star
5117 3062 Star
5175 3543 Star
5232 3616 Star
5289 3722 Star
5346 3229 Star
5403 3548 Star
5461 3475 Star
5518 3739 Star
5575 4229 Star
5632 4396 Star
5690 3988 Star
5747 3888 Star
5804 4167 Star
5861 4650 Star
5919 4760 Star
5976 4876 Star
6033 4317 Star
6090 4628 Star
6147 5152 Star
6205 5256 Star
6262 4884 Star
6319 4782 Star
6376 5570 Star
6434 5709 Star
6491 4964 Star
6548 5426 Star
6605 5632 Star
6663 7230 Star
6720 6340 Star
6777 5965 Star
6834 7678 Star
6892 7990 Star
6949 6271 Star
10816 9055 Star
1.000 UL
LTb
882 9468 N
882 448 L
10302 0 V
0 9020 V
882 9468 L
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
