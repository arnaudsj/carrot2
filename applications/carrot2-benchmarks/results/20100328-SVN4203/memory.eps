%!PS-Adobe-2.0 EPSF-2.0
%%Title: memory.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sun Mar 28 18:37:28 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 616 531
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (memory.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (dweiss)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Mar 28 18:37:28 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
882 448 M
63 0 V
10239 0 R
-63 0 V
stroke
798 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MRshow
1.000 UL
LTb
882 1576 M
63 0 V
10239 0 R
-63 0 V
stroke
798 1576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MRshow
1.000 UL
LTb
882 2703 M
63 0 V
10239 0 R
-63 0 V
stroke
798 2703 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MRshow
1.000 UL
LTb
882 3831 M
63 0 V
10239 0 R
-63 0 V
stroke
798 3831 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
882 4958 M
63 0 V
10239 0 R
-63 0 V
stroke
798 4958 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 120)]
] -46.7 MRshow
1.000 UL
LTb
882 6086 M
63 0 V
10239 0 R
-63 0 V
stroke
798 6086 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 140)]
] -46.7 MRshow
1.000 UL
LTb
882 7213 M
63 0 V
10239 0 R
-63 0 V
stroke
798 7213 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 160)]
] -46.7 MRshow
1.000 UL
LTb
882 8341 M
63 0 V
10239 0 R
-63 0 V
stroke
798 8341 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 180)]
] -46.7 MRshow
1.000 UL
LTb
882 9468 M
63 0 V
10239 0 R
-63 0 V
stroke
798 9468 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MRshow
1.000 UL
LTb
882 448 M
0 63 V
0 8957 R
0 -63 V
stroke
882 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
2027 448 M
0 63 V
0 8957 R
0 -63 V
stroke
2027 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2000)]
] -46.7 MCshow
1.000 UL
LTb
3171 448 M
0 63 V
0 8957 R
0 -63 V
stroke
3171 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4000)]
] -46.7 MCshow
1.000 UL
LTb
4316 448 M
0 63 V
0 8957 R
0 -63 V
stroke
4316 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6000)]
] -46.7 MCshow
1.000 UL
LTb
5461 448 M
0 63 V
0 8957 R
0 -63 V
stroke
5461 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8000)]
] -46.7 MCshow
1.000 UL
LTb
6605 448 M
0 63 V
0 8957 R
0 -63 V
stroke
6605 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MCshow
1.000 UL
LTb
7750 448 M
0 63 V
0 8957 R
0 -63 V
stroke
7750 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 12000)]
] -46.7 MCshow
1.000 UL
LTb
8895 448 M
0 63 V
0 8957 R
0 -63 V
stroke
8895 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 14000)]
] -46.7 MCshow
1.000 UL
LTb
10039 448 M
0 63 V
0 8957 R
0 -63 V
stroke
10039 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 16000)]
] -46.7 MCshow
1.000 UL
LTb
11184 448 M
0 63 V
0 8957 R
0 -63 V
stroke
11184 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 18000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
882 9468 N
882 448 L
10302 0 V
0 9020 V
882 9468 L
Z stroke
LCb setrgbcolor
308 4958 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (peak memory [MB])]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
6033 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (documents)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
10533 9335 M
[ [(Helvetica) 140.0 0.0 true true 0 (HEAD)]
] -46.7 MRshow
LT0
10617 9335 M
399 0 V
1454 2007 M
573 -243 V
572 375 V
572 584 V
573 255 V
572 478 V
572 535 V
573 582 V
572 591 V
572 189 V
573 376 V
572 528 V
572 546 V
573 228 V
572 395 V
572 233 V
573 393 V
572 801 V
1454 2007 Pls
2027 1764 Pls
2599 2139 Pls
3171 2723 Pls
3744 2978 Pls
4316 3456 Pls
4888 3991 Pls
5461 4573 Pls
6033 5164 Pls
6605 5353 Pls
7178 5729 Pls
7750 6257 Pls
8322 6803 Pls
8895 7031 Pls
9467 7426 Pls
10039 7659 Pls
10612 8052 Pls
11184 8853 Pls
10816 9335 Pls
1.000 UP
1.000 UL
LT1
LTb
10533 9195 M
[ [(Helvetica) 140.0 0.0 true true 0 (SVN4197)]
] -46.7 MRshow
LT1
10617 9195 M
399 0 V
939 1550 M
996 760 L
58 1 V
57 220 V
57 2 V
57 9 V
58 0 V
57 223 V
57 25 V
57 -11 V
58 19 V
57 212 V
57 -1 V
57 5 V
58 -6 V
57 0 V
57 221 V
57 53 V
57 19 V
58 4 V
57 -69 V
57 94 V
57 119 V
58 -7 V
57 4 V
57 -3 V
57 283 V
58 -171 V
57 219 V
57 -103 V
57 158 V
57 -2 V
58 86 V
57 -24 V
57 -6 V
57 -3 V
58 100 V
57 19 V
57 22 V
57 203 V
58 130 V
57 4 V
57 45 V
57 12 V
58 -1 V
57 30 V
57 1 V
57 -12 V
57 40 V
58 9 V
57 -3 V
57 36 V
57 208 V
58 47 V
57 130 V
57 21 V
57 19 V
58 42 V
57 25 V
57 -45 V
57 174 V
57 14 V
58 29 V
57 2 V
57 23 V
57 213 V
58 -26 V
57 70 V
57 18 V
57 2 V
58 21 V
57 27 V
57 7 V
57 30 V
58 24 V
57 26 V
57 -4 V
57 17 V
57 268 V
58 148 V
57 0 V
57 129 V
57 -89 V
58 42 V
57 360 V
57 24 V
57 24 V
58 -55 V
57 18 V
57 13 V
57 211 V
57 -162 V
58 217 V
57 -181 V
57 159 V
57 122 V
58 20 V
57 24 V
57 17 V
57 -44 V
58 14 V
57 21 V
57 7 V
57 12 V
58 20 V
57 14 V
stroke 6949 5432 M
57 56 V
57 29 V
57 147 V
58 -174 V
57 200 V
57 13 V
57 15 V
58 24 V
57 17 V
57 28 V
57 282 V
58 -39 V
57 14 V
57 145 V
57 -106 V
57 21 V
58 72 V
57 3 V
57 34 V
57 4 V
58 20 V
57 126 V
57 -80 V
57 386 V
58 116 V
57 -69 V
57 120 V
57 23 V
58 -73 V
57 149 V
57 -8 V
57 27 V
57 -85 V
58 23 V
57 20 V
57 130 V
57 40 V
58 137 V
57 10 V
57 20 V
57 25 V
58 -29 V
57 102 V
57 18 V
57 28 V
57 30 V
58 13 V
57 21 V
57 18 V
57 26 V
58 21 V
57 -68 V
57 118 V
57 9 V
58 -57 V
57 103 V
57 21 V
57 31 V
58 27 V
57 10 V
57 -2 V
57 85 V
57 86 V
58 29 V
57 -27 V
57 100 V
57 81 V
58 456 V
57 -14 V
57 50 V
57 77 V
58 -12 V
57 -13 V
57 49 V
939 1550 Crs
996 760 Crs
1054 761 Crs
1111 981 Crs
1168 983 Crs
1225 992 Crs
1283 992 Crs
1340 1215 Crs
1397 1240 Crs
1454 1229 Crs
1512 1248 Crs
1569 1460 Crs
1626 1459 Crs
1683 1464 Crs
1741 1458 Crs
1798 1458 Crs
1855 1679 Crs
1912 1732 Crs
1969 1751 Crs
2027 1755 Crs
2084 1686 Crs
2141 1780 Crs
2198 1899 Crs
2256 1892 Crs
2313 1896 Crs
2370 1893 Crs
2427 2176 Crs
2485 2005 Crs
2542 2224 Crs
2599 2121 Crs
2656 2279 Crs
2713 2277 Crs
2771 2363 Crs
2828 2339 Crs
2885 2333 Crs
2942 2330 Crs
3000 2430 Crs
3057 2449 Crs
3114 2471 Crs
3171 2674 Crs
3229 2804 Crs
3286 2808 Crs
3343 2853 Crs
3400 2865 Crs
3458 2864 Crs
3515 2894 Crs
3572 2895 Crs
3629 2883 Crs
3686 2923 Crs
3744 2932 Crs
3801 2929 Crs
3858 2965 Crs
3915 3173 Crs
3973 3220 Crs
4030 3350 Crs
4087 3371 Crs
4144 3390 Crs
4202 3432 Crs
4259 3457 Crs
4316 3412 Crs
4373 3586 Crs
4430 3600 Crs
4488 3629 Crs
4545 3631 Crs
4602 3654 Crs
4659 3867 Crs
4717 3841 Crs
4774 3911 Crs
4831 3929 Crs
4888 3931 Crs
4946 3952 Crs
5003 3979 Crs
5060 3986 Crs
5117 4016 Crs
5175 4040 Crs
5232 4066 Crs
5289 4062 Crs
5346 4079 Crs
5403 4347 Crs
5461 4495 Crs
5518 4495 Crs
5575 4624 Crs
5632 4535 Crs
5690 4577 Crs
5747 4937 Crs
5804 4961 Crs
5861 4985 Crs
5919 4930 Crs
5976 4948 Crs
6033 4961 Crs
6090 5172 Crs
6147 5010 Crs
6205 5227 Crs
6262 5046 Crs
6319 5205 Crs
6376 5327 Crs
6434 5347 Crs
6491 5371 Crs
6548 5388 Crs
6605 5344 Crs
6663 5358 Crs
6720 5379 Crs
6777 5386 Crs
6834 5398 Crs
6892 5418 Crs
6949 5432 Crs
7006 5488 Crs
7063 5517 Crs
7120 5664 Crs
7178 5490 Crs
7235 5690 Crs
7292 5703 Crs
7349 5718 Crs
7407 5742 Crs
7464 5759 Crs
7521 5787 Crs
7578 6069 Crs
7636 6030 Crs
7693 6044 Crs
7750 6189 Crs
7807 6083 Crs
7864 6104 Crs
7922 6176 Crs
7979 6179 Crs
8036 6213 Crs
8093 6217 Crs
8151 6237 Crs
8208 6363 Crs
8265 6283 Crs
8322 6669 Crs
8380 6785 Crs
8437 6716 Crs
8494 6836 Crs
8551 6859 Crs
8609 6786 Crs
8666 6935 Crs
8723 6927 Crs
8780 6954 Crs
8837 6869 Crs
8895 6892 Crs
8952 6912 Crs
9009 7042 Crs
9066 7082 Crs
9124 7219 Crs
9181 7229 Crs
9238 7249 Crs
9295 7274 Crs
9353 7245 Crs
9410 7347 Crs
9467 7365 Crs
9524 7393 Crs
9581 7423 Crs
9639 7436 Crs
9696 7457 Crs
9753 7475 Crs
9810 7501 Crs
9868 7522 Crs
9925 7454 Crs
9982 7572 Crs
10039 7581 Crs
10097 7524 Crs
10154 7627 Crs
10211 7648 Crs
10268 7679 Crs
10326 7706 Crs
10383 7716 Crs
10440 7714 Crs
10497 7799 Crs
10554 7885 Crs
10612 7914 Crs
10669 7887 Crs
10726 7987 Crs
10783 8068 Crs
10841 8524 Crs
10898 8510 Crs
10955 8560 Crs
11012 8637 Crs
11070 8625 Crs
11127 8612 Crs
11184 8661 Crs
10816 9195 Crs
1.000 UL
LTb
882 9468 N
882 448 L
10302 0 V
0 9020 V
882 9468 L
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
