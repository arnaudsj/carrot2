%!PS-Adobe-2.0 EPSF-2.0
%%Title: times.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Wed Mar 31 10:07:52 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 616 531
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (times.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (dweiss)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar 31 10:07:52 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 448 M
63 0 V
10407 0 R
-63 0 V
stroke
630 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
714 1737 M
63 0 V
10407 0 R
-63 0 V
stroke
630 1737 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
714 3025 M
63 0 V
10407 0 R
-63 0 V
stroke
630 3025 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
714 4314 M
63 0 V
10407 0 R
-63 0 V
stroke
630 4314 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
714 5602 M
63 0 V
10407 0 R
-63 0 V
stroke
630 5602 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
714 6891 M
63 0 V
10407 0 R
-63 0 V
stroke
630 6891 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
714 8179 M
63 0 V
10407 0 R
-63 0 V
stroke
630 8179 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6)]
] -46.7 MRshow
1.000 UL
LTb
714 9468 M
63 0 V
10407 0 R
-63 0 V
stroke
630 9468 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 7)]
] -46.7 MRshow
1.000 UL
LTb
714 448 M
0 63 V
0 8957 R
0 -63 V
stroke
714 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1877 448 M
0 63 V
0 8957 R
0 -63 V
stroke
1877 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2000)]
] -46.7 MCshow
1.000 UL
LTb
3041 448 M
0 63 V
0 8957 R
0 -63 V
stroke
3041 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4000)]
] -46.7 MCshow
1.000 UL
LTb
4204 448 M
0 63 V
0 8957 R
0 -63 V
stroke
4204 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6000)]
] -46.7 MCshow
1.000 UL
LTb
5367 448 M
0 63 V
0 8957 R
0 -63 V
stroke
5367 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8000)]
] -46.7 MCshow
1.000 UL
LTb
6531 448 M
0 63 V
0 8957 R
0 -63 V
stroke
6531 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MCshow
1.000 UL
LTb
7694 448 M
0 63 V
0 8957 R
0 -63 V
stroke
7694 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 12000)]
] -46.7 MCshow
1.000 UL
LTb
8857 448 M
0 63 V
0 8957 R
0 -63 V
stroke
8857 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 14000)]
] -46.7 MCshow
1.000 UL
LTb
10021 448 M
0 63 V
0 8957 R
0 -63 V
stroke
10021 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 16000)]
] -46.7 MCshow
1.000 UL
LTb
11184 448 M
0 63 V
0 8957 R
0 -63 V
stroke
11184 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 18000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
714 9468 N
714 448 L
10470 0 V
0 9020 V
714 9468 L
Z stroke
LCb setrgbcolor
308 4958 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (time [s])]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
5949 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (documents)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
10533 9335 M
[ [(Helvetica) 140.0 0.0 true true 0 (HEAD)]
] -46.7 MRshow
LT0
10617 9335 M
399 0 V
772 809 M
830 564 L
58 -13 V
59 -39 V
58 0 V
58 0 V
58 0 V
58 39 V
58 13 V
59 -52 V
58 0 V
58 0 V
58 13 V
58 0 V
58 0 V
59 13 V
58 0 V
58 0 V
58 0 V
58 13 V
58 0 V
59 0 V
58 13 V
58 13 V
58 -13 V
58 13 V
58 0 V
59 26 V
58 13 V
58 0 V
58 -13 V
58 13 V
58 38 V
59 -26 V
58 0 V
58 13 V
58 0 V
58 0 V
58 13 V
59 0 V
58 0 V
58 13 V
58 0 V
58 13 V
58 0 V
59 0 V
58 26 V
58 -13 V
58 0 V
58 13 V
58 13 V
59 -13 V
58 13 V
58 0 V
58 12 V
58 0 V
58 0 V
59 13 V
58 0 V
58 0 V
58 39 V
58 -13 V
58 13 V
59 0 V
58 13 V
58 -13 V
58 13 V
58 26 V
58 -26 V
59 13 V
58 0 V
58 38 V
58 0 V
58 13 V
58 13 V
59 -26 V
58 -12 V
58 12 V
58 39 V
58 13 V
58 0 V
59 0 V
58 26 V
58 0 V
58 0 V
58 13 V
58 38 V
59 -25 V
58 0 V
58 0 V
58 25 V
58 13 V
58 0 V
59 0 V
58 13 V
58 0 V
58 0 V
58 0 V
58 13 V
59 0 V
58 0 V
58 13 V
58 0 V
58 13 V
58 0 V
59 0 V
stroke 6880 1041 M
58 13 V
58 25 V
58 -25 V
58 25 V
58 0 V
59 0 V
58 0 V
58 13 V
58 0 V
58 13 V
58 -13 V
59 13 V
58 13 V
58 -13 V
58 13 V
58 13 V
58 0 V
59 0 V
58 0 V
58 64 V
58 -38 V
58 0 V
58 13 V
59 103 V
58 -103 V
58 12 V
58 13 V
58 13 V
58 -13 V
59 13 V
58 0 V
58 0 V
58 13 V
58 0 V
58 13 V
59 13 V
58 0 V
58 0 V
58 13 V
58 13 V
58 25 V
59 -25 V
58 0 V
58 0 V
58 13 V
58 0 V
58 0 V
59 12 V
58 13 V
58 0 V
58 0 V
58 13 V
58 0 V
59 13 V
58 -13 V
58 52 V
58 -26 V
58 13 V
58 0 V
59 0 V
58 0 V
58 0 V
58 0 V
58 13 V
58 0 V
59 13 V
58 13 V
58 25 V
58 52 V
58 -39 V
58 0 V
59 26 V
58 0 V
58 0 V
772 809 Pls
830 564 Pls
888 551 Pls
947 512 Pls
1005 512 Pls
1063 512 Pls
1121 512 Pls
1179 551 Pls
1237 564 Pls
1296 512 Pls
1354 512 Pls
1412 512 Pls
1470 525 Pls
1528 525 Pls
1586 525 Pls
1645 538 Pls
1703 538 Pls
1761 538 Pls
1819 538 Pls
1877 551 Pls
1935 551 Pls
1994 551 Pls
2052 564 Pls
2110 577 Pls
2168 564 Pls
2226 577 Pls
2284 577 Pls
2343 603 Pls
2401 616 Pls
2459 616 Pls
2517 603 Pls
2575 616 Pls
2633 654 Pls
2692 628 Pls
2750 628 Pls
2808 641 Pls
2866 641 Pls
2924 641 Pls
2982 654 Pls
3041 654 Pls
3099 654 Pls
3157 667 Pls
3215 667 Pls
3273 680 Pls
3331 680 Pls
3390 680 Pls
3448 706 Pls
3506 693 Pls
3564 693 Pls
3622 706 Pls
3680 719 Pls
3739 706 Pls
3797 719 Pls
3855 719 Pls
3913 731 Pls
3971 731 Pls
4029 731 Pls
4088 744 Pls
4146 744 Pls
4204 744 Pls
4262 783 Pls
4320 770 Pls
4378 783 Pls
4437 783 Pls
4495 796 Pls
4553 783 Pls
4611 796 Pls
4669 822 Pls
4727 796 Pls
4786 809 Pls
4844 809 Pls
4902 847 Pls
4960 847 Pls
5018 860 Pls
5076 873 Pls
5135 847 Pls
5193 835 Pls
5251 847 Pls
5309 886 Pls
5367 899 Pls
5425 899 Pls
5484 899 Pls
5542 925 Pls
5600 925 Pls
5658 925 Pls
5716 938 Pls
5774 976 Pls
5833 951 Pls
5891 951 Pls
5949 951 Pls
6007 976 Pls
6065 989 Pls
6123 989 Pls
6182 989 Pls
6240 1002 Pls
6298 1002 Pls
6356 1002 Pls
6414 1002 Pls
6472 1015 Pls
6531 1015 Pls
6589 1015 Pls
6647 1028 Pls
6705 1028 Pls
6763 1041 Pls
6821 1041 Pls
6880 1041 Pls
6938 1054 Pls
6996 1079 Pls
7054 1054 Pls
7112 1079 Pls
7170 1079 Pls
7229 1079 Pls
7287 1079 Pls
7345 1092 Pls
7403 1092 Pls
7461 1105 Pls
7519 1092 Pls
7578 1105 Pls
7636 1118 Pls
7694 1105 Pls
7752 1118 Pls
7810 1131 Pls
7868 1131 Pls
7927 1131 Pls
7985 1131 Pls
8043 1195 Pls
8101 1157 Pls
8159 1157 Pls
8217 1170 Pls
8276 1273 Pls
8334 1170 Pls
8392 1182 Pls
8450 1195 Pls
8508 1208 Pls
8566 1195 Pls
8625 1208 Pls
8683 1208 Pls
8741 1208 Pls
8799 1221 Pls
8857 1221 Pls
8915 1234 Pls
8974 1247 Pls
9032 1247 Pls
9090 1247 Pls
9148 1260 Pls
9206 1273 Pls
9264 1298 Pls
9323 1273 Pls
9381 1273 Pls
9439 1273 Pls
9497 1286 Pls
9555 1286 Pls
9613 1286 Pls
9672 1298 Pls
9730 1311 Pls
9788 1311 Pls
9846 1311 Pls
9904 1324 Pls
9962 1324 Pls
10021 1337 Pls
10079 1324 Pls
10137 1376 Pls
10195 1350 Pls
10253 1363 Pls
10311 1363 Pls
10370 1363 Pls
10428 1363 Pls
10486 1363 Pls
10544 1363 Pls
10602 1376 Pls
10660 1376 Pls
10719 1389 Pls
10777 1402 Pls
10835 1427 Pls
10893 1479 Pls
10951 1440 Pls
11009 1440 Pls
11068 1466 Pls
11126 1466 Pls
11184 1466 Pls
10816 9335 Pls
1.000 UP
1.000 UL
LT1
LTb
10533 9195 M
[ [(Helvetica) 140.0 0.0 true true 0 (SVN4209)]
] -46.7 MRshow
LT1
10617 9195 M
399 0 V
1296 1118 M
1877 770 L
2459 654 L
582 0 V
581 39 V
582 51 V
582 65 V
581 77 V
582 52 V
582 51 V
581 39 V
582 90 V
582 39 V
581 38 V
582 78 V
582 77 V
581 39 V
582 64 V
1296 1118 Crs
1877 770 Crs
2459 654 Crs
3041 654 Crs
3622 693 Crs
4204 744 Crs
4786 809 Crs
5367 886 Crs
5949 938 Crs
6531 989 Crs
7112 1028 Crs
7694 1118 Crs
8276 1157 Crs
8857 1195 Crs
9439 1273 Crs
10021 1350 Crs
10602 1389 Crs
11184 1453 Crs
10816 9195 Crs
1.000 UP
1.000 UL
LT2
LTb
10533 9055 M
[ [(Helvetica) 140.0 0.0 true true 0 (SVN4203)]
] -46.7 MRshow
LT2
10617 9055 M
399 0 V
1296 1195 M
1877 796 L
582 0 V
582 103 V
581 142 V
582 180 V
582 193 V
581 297 V
582 193 V
582 284 V
581 219 V
582 270 V
582 297 V
581 296 V
582 387 V
582 296 V
581 348 V
582 425 V
1296 1195 Star
1877 796 Star
2459 796 Star
3041 899 Star
3622 1041 Star
4204 1221 Star
4786 1414 Star
5367 1711 Star
5949 1904 Star
6531 2188 Star
7112 2407 Star
7694 2677 Star
8276 2974 Star
8857 3270 Star
9439 3657 Star
10021 3953 Star
10602 4301 Star
11184 4726 Star
10816 9055 Star
1.000 UP
1.000 UL
LT3
LTb
10533 8915 M
[ [(Helvetica) 140.0 0.0 true true 0 (SVN4197)]
] -46.7 MRshow
LT3
10617 8915 M
399 0 V
772 796 M
830 551 L
58 -26 V
59 -13 V
58 0 V
58 0 V
58 13 V
58 26 V
58 -13 V
59 13 V
58 13 V
58 13 V
58 0 V
58 26 V
58 0 V
59 25 V
58 13 V
58 13 V
58 13 V
58 26 V
58 13 V
59 13 V
58 12 V
58 26 V
58 26 V
58 26 V
58 38 V
59 0 V
58 26 V
58 26 V
58 13 V
58 26 V
58 25 V
59 26 V
58 26 V
58 26 V
58 38 V
58 26 V
58 13 V
59 26 V
58 26 V
58 25 V
58 26 V
58 26 V
58 26 V
59 38 V
58 26 V
58 26 V
58 26 V
58 64 V
58 0 V
59 39 V
58 51 V
58 13 V
58 26 V
58 51 V
58 26 V
59 78 V
58 0 V
58 38 V
58 39 V
58 39 V
58 38 V
59 26 V
58 39 V
58 25 V
58 52 V
58 26 V
58 38 V
59 78 V
58 13 V
58 38 V
58 39 V
58 51 V
58 52 V
59 77 V
58 0 V
58 65 V
58 116 V
58 77 V
58 39 V
59 38 V
58 39 V
58 77 V
58 26 V
58 52 V
58 51 V
59 103 V
58 -26 V
58 39 V
58 52 V
58 64 V
58 26 V
59 51 V
58 91 V
58 12 V
58 52 V
58 77 V
58 0 V
59 39 V
58 77 V
58 78 V
58 0 V
58 103 V
58 -39 V
59 77 V
stroke 6880 3901 M
58 39 V
58 64 V
58 104 V
58 51 V
58 65 V
59 51 V
58 26 V
58 90 V
58 39 V
58 77 V
58 -13 V
59 65 V
58 103 V
58 25 V
58 103 V
58 39 V
58 39 V
59 77 V
58 65 V
58 141 V
58 13 V
58 65 V
58 51 V
59 13 V
58 52 V
58 128 V
58 78 V
58 64 V
58 90 V
59 65 V
58 51 V
58 -38 V
58 90 V
58 13 V
58 64 V
59 90 V
58 207 V
58 90 V
58 26 V
58 77 V
58 -13 V
59 116 V
58 51 V
58 39 V
58 77 V
58 91 V
58 51 V
59 155 V
58 -65 V
58 26 V
58 142 V
58 77 V
58 78 V
59 77 V
58 103 V
58 116 V
58 -39 V
58 26 V
58 103 V
59 65 V
58 244 V
58 26 V
58 116 V
58 -77 V
58 103 V
59 103 V
58 167 V
58 116 V
58 52 V
58 39 V
58 90 V
59 77 V
58 26 V
58 103 V
772 796 Box
830 551 Box
888 525 Box
947 512 Box
1005 512 Box
1063 512 Box
1121 525 Box
1179 551 Box
1237 538 Box
1296 551 Box
1354 564 Box
1412 577 Box
1470 577 Box
1528 603 Box
1586 603 Box
1645 628 Box
1703 641 Box
1761 654 Box
1819 667 Box
1877 693 Box
1935 706 Box
1994 719 Box
2052 731 Box
2110 757 Box
2168 783 Box
2226 809 Box
2284 847 Box
2343 847 Box
2401 873 Box
2459 899 Box
2517 912 Box
2575 938 Box
2633 963 Box
2692 989 Box
2750 1015 Box
2808 1041 Box
2866 1079 Box
2924 1105 Box
2982 1118 Box
3041 1144 Box
3099 1170 Box
3157 1195 Box
3215 1221 Box
3273 1247 Box
3331 1273 Box
3390 1311 Box
3448 1337 Box
3506 1363 Box
3564 1389 Box
3622 1453 Box
3680 1453 Box
3739 1492 Box
3797 1543 Box
3855 1556 Box
3913 1582 Box
3971 1633 Box
4029 1659 Box
4088 1737 Box
4146 1737 Box
4204 1775 Box
4262 1814 Box
4320 1853 Box
4378 1891 Box
4437 1917 Box
4495 1956 Box
4553 1981 Box
4611 2033 Box
4669 2059 Box
4727 2097 Box
4786 2175 Box
4844 2188 Box
4902 2226 Box
4960 2265 Box
5018 2316 Box
5076 2368 Box
5135 2445 Box
5193 2445 Box
5251 2510 Box
5309 2626 Box
5367 2703 Box
5425 2742 Box
5484 2780 Box
5542 2819 Box
5600 2896 Box
5658 2922 Box
5716 2974 Box
5774 3025 Box
5833 3128 Box
5891 3102 Box
5949 3141 Box
6007 3193 Box
6065 3257 Box
6123 3283 Box
6182 3334 Box
6240 3425 Box
6298 3437 Box
6356 3489 Box
6414 3566 Box
6472 3566 Box
6531 3605 Box
6589 3682 Box
6647 3760 Box
6705 3760 Box
6763 3863 Box
6821 3824 Box
6880 3901 Box
6938 3940 Box
6996 4004 Box
7054 4108 Box
7112 4159 Box
7170 4224 Box
7229 4275 Box
7287 4301 Box
7345 4391 Box
7403 4430 Box
7461 4507 Box
7519 4494 Box
7578 4559 Box
7636 4662 Box
7694 4687 Box
7752 4790 Box
7810 4829 Box
7868 4868 Box
7927 4945 Box
7985 5010 Box
8043 5151 Box
8101 5164 Box
8159 5229 Box
8217 5280 Box
8276 5293 Box
8334 5345 Box
8392 5473 Box
8450 5551 Box
8508 5615 Box
8566 5705 Box
8625 5770 Box
8683 5821 Box
8741 5783 Box
8799 5873 Box
8857 5886 Box
8915 5950 Box
8974 6040 Box
9032 6247 Box
9090 6337 Box
9148 6363 Box
9206 6440 Box
9264 6427 Box
9323 6543 Box
9381 6594 Box
9439 6633 Box
9497 6710 Box
9555 6801 Box
9613 6852 Box
9672 7007 Box
9730 6942 Box
9788 6968 Box
9846 7110 Box
9904 7187 Box
9962 7265 Box
10021 7342 Box
10079 7445 Box
10137 7561 Box
10195 7522 Box
10253 7548 Box
10311 7651 Box
10370 7716 Box
10428 7960 Box
10486 7986 Box
10544 8102 Box
10602 8025 Box
10660 8128 Box
10719 8231 Box
10777 8398 Box
10835 8514 Box
10893 8566 Box
10951 8605 Box
11009 8695 Box
11068 8772 Box
11126 8798 Box
11184 8901 Box
10816 8915 Box
1.000 UL
LTb
714 9468 N
714 448 L
10470 0 V
0 9020 V
714 9468 L
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
