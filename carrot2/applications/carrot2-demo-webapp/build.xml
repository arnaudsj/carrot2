
<project name="Carrot2 Demo Web Application" default="build.demo">

    <property file="${user.home}/.carrot.properties" />
    <property file="local.properties" />

    <property name="project.dir"      location="${basedir}" />
    <property name="carrot2.cvs.dir"  location="../.." />

    <property name="type" value="wartype" />
    <property name="distribution.dir" location="${project.dir}/tmp/dist" />
    <property name="component.descriptor" location="carrot2-demo-webapp.dep.xml" />

    <!-- Default values for webapp parameters -->
    <property name="xsltFilter.template.caching" value="false" />
    <property name="webapp.inputSize.default" value="100" />
  
    <import file="${carrot2.cvs.dir}/components/common-targets.inc" />

    <target name="build" depends="preprocess" description="Builds a demo WAR file.">
    	<property name="dist.name" value="carrot2-demo-webapp" />
        <property name="build.dir" location="${project.dir}/tmp/build.demo" />
        <property name="profile" value="demo" />

        <!--
          When there is a need to install a shared copy of log4j (between Web applications and
          Catalina), putting a local copy of Log4j causes severe class loading problems (multiple
          instantiations of singleton Logger classes, reconfiguration etc). Allow excluding
          log4j from the built WAR file by specifying a property: webapp.log4j.exclude
          -->
        <if>
            <isset property="webapp.log4j.exclude" />
            <then>
                <patternset id="war.patternset">
                    <exclude name="WEB-INF/lib/*log4j*.jar" />
                    <exclude name="WEB-INF/classes/log4j.properties" />
                </patternset>
            </then>
            <else>
                <copy file="${project.dir}/etc/log4j.properties.war"
                      tofile="${build.dir}/type-war/WEB-INF/classes/log4j.properties" />
            </else>
        </if>

        <ant target="build.${type}"
             antfile="${carrot2.cvs.dir}/components/master.xml" inheritall="true" inheritrefs="true">
        </ant>
    </target>

    <target name="build.demo" depends="build" description="Builds a WAR file with open source components demo.">
    </target>

    <target name="build.war" description="Builds a plain WAR file (no components)"
            depends="preprocess">
        <property name="dist.name" value="carrot2-webapp" />
        <property name="build.dir" location="${project.dir}/tmp/build.war" />

        <patternset id="war.patternset">
            <exclude name="algorithms/*.bsh" />
            <exclude name="algorithms/*.xml" />
            <exclude name="inputs/*.bsh" />
            <exclude name="inputs/*.xml" />
            <exclude name="inputs/*.cfg" />
        </patternset>

        <property name="profile" value="war" />
        <antcall target="build" inheritall="true">
            <reference refid="war.patternset" />
        </antcall>
    </target>
    
    <target name="jars" description="Updates JARS in WEB-INF/lib" depends="build.demo">
        <description>Copies JAR files to web/WEB-INF/lib (for Eclipse)</description>

    	<mkdir dir="web/WEB-INF/lib" />

        <delete>
            <fileset dir="web/WEB-INF/lib" includes="*.jar" />
        </delete>
        
        <unzip src="${distribution.dir}/${dist.name}.war" dest="web">
            <patternset includes="WEB-INF/lib/*.jar" />
        </unzip>
    </target>
  
    <target name="preprocess">
        <echo>
####
Setting inputSize.default to: ${webapp.inputSize.default}
Setting template.caching to: ${xsltFilter.template.caching}
####
        </echo>
    
        <filterset begintoken="@" endtoken="@" id="filter.webxml">
            <filter token="INPUT_SIZE_DEFAULT" value="${webapp.inputSize.default}"/>
            <filter token="XSLT_TEMPLATE_CACHING" value="${xsltFilter.template.caching}"/>
        </filterset>
    
        <copy overwrite="true" file="web/WEB-INF/web.xml.template" tofile="web/WEB-INF/web.xml" filtering="true">
            <filterset refid="filter.webxml"/>
        </copy>
    </target>
</project>
