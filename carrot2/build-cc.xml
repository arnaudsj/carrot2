<?xml version="1.0" encoding="UTF-8" ?>

<project name="Carrot2 CruiseControl builds" default="help">

    <target name="build" description="Perform a full build.">
        <fail unless="carrot2.cvs.dir">Define: carrot2.cvs.dir</fail>

        <!-- clean everything -->
        <ant dir="${carrot2.cvs.dir}" antfile="build.xml" target="cleanall" inheritall="false" />
        <!-- full build of all components -->
        <ant dir="${carrot2.cvs.dir}" antfile="build.xml" target="build" inheritall="false" />
        <!-- run tests -->
        <ant dir="${carrot2.cvs.dir}" antfile="build.xml" target="test" inheritall="false" />

        <!-- build the webapp -->
        <ant dir="${carrot2.cvs.dir}/applications/carrot2-demo-webapp" antfile="build.xml"
             target="build" inheritall="false" />
    </target>

    <target name="publish" description="Publish a demo web application internally on the demo server.">
        <fail unless="carrot2.cvs.dir">Define: carrot2.cvs.dir</fail>
        <fail unless="webapp.name">Define: webapp.name property.</fail>
        <fail unless="webapps.dir">Define: webapps.dir property.</fail>
        <fail unless="tomcat.init">Define: webapps.dir property.</fail>

        <exec dir="${carrot2.cvs.dir}" executable="${tomcat.init}" vmlauncher="false" failonerror="true">
            <arg line="stop" />
        </exec>

        <sleep seconds="10" />

        <ant dir="${carrot2.cvs.dir}/applications/carrot2-demo-webapp" antfile="build.xml" target="build" inheritall="false">
            <property name="webapp.log4j.exclude" value="true" />
        </ant>

        <copy file="${carrot2.cvs.dir}/applications/carrot2-demo-webapp/tmp/dist/carrot2-demo-webapp.war"
              tofile="${webapps.dir}/${webapp.name}.war"
              overwrite="true" />
        <delete dir="${webapps.dir}/${webapp.name}" />

        <exec dir="${carrot2.cvs.dir}" executable="${tomcat.init}" vmlauncher="false" failonerror="true">
            <arg line="start" />
        </exec>
    </target>

    <target name="update" description="Perform SVN update to a given revision">
        <fail unless="carrot2.cvs.dir">Define: carrot2.cvs.dir</fail>
        <fail unless="svn.revision">Define: svn.revision property for updates.</fail>

        <echo>Updating local checkout to revision: ${svn.revision}</echo>
        <exec dir="${carrot2.cvs.dir}" executable="svn" vmlauncher="false" failonerror="true">
            <arg line="update -r ${svn.revision}" />
        </exec>
    </target>

    <target name="help">
        <echo>This file is used to drive automated CruiseControl builds.</echo>
    </target>
</project>
